{"version":3,"sources":["api/auth.service.js","actions/auth.js","actions/types.js","utils/history.js","commons/components/GreetDev.js","pages/Helloworld/Helloworld.js","pages/Login/Login.js","pages/RegisterClient/RegisterClient.js","pages/RegisterRestaurant/RegisterRestaurant.js","pages/RegisterDeliveryman/RegisterDeliveryman.js","commons/components/Nav.js","App.js","actions/message.js","utils/serviceWorker.js","reducers/auth.js","reducers/message.js","reducers/index.js","store.js","index.js"],"names":["API_URL","name","email","password","type","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","register","dispatch","AuthService","payload","message","Promise","resolve","error","toString","reject","history","createBrowserHistory","GreetDev","props","useState","likes","setlikes","reportmsg","setReportmsg","onClick","Helloworld","map","dev","key","validEmail","value","isEmail","className","role","required","Login","form","useRef","checkBtn","setEmail","setPassword","loading","setLoading","isLoggedIn","useSelector","state","auth","useDispatch","to","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","user","login","push","window","location","reload","catch","ref","autoFocus","onChange","target","validations","disabled","style","display","vpassword","Register","setname","successful","setSuccessful","Nav","navStyle","color","Form","Group","Control","id","placeholder","stryle","App","currentUser","console","log","useEffect","listen","exact","path","component","RegisterClient","RegisterRestaurant","RegisterDeliveryman","Boolean","hostname","match","parse","getItem","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","require","config","Store","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae715456.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:3000/api/\";\r\n\r\nconst register = (name, email, password, type) => {\r\n  return axios.post(API_URL + \"register\", {\r\n    name,\r\n    email,\r\n    password,\r\n    type\r\n  });\r\n};\r\n\r\nconst login = (email, password) => {\r\n  return axios\r\n    .post(API_URL + \"login\", {\r\n      email,\r\n      password,\r\n    }, {\"Access-Control-Allow-Origin\" : \"http://localhost:3000/api/\"})\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n};\r\n","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    SET_MESSAGE,\r\n  } from \"./types\";\r\n  \r\n  import AuthService from \"../api/auth.service\";\r\n  \r\n  export const register = (name, email, password, type) => (dispatch) => {\r\n    return AuthService.register(name, email, password, type).then(\r\n      (response) => {\r\n        dispatch({\r\n          type: REGISTER_SUCCESS,\r\n        });\r\n  \r\n        dispatch({\r\n          type: SET_MESSAGE,\r\n          payload: response.data.message,\r\n        });\r\n  \r\n        return Promise.resolve();\r\n      },\r\n      (error) => {\r\n        const message =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n  \r\n        dispatch({\r\n          type: REGISTER_FAIL,\r\n        });\r\n  \r\n        dispatch({\r\n          type: SET_MESSAGE,\r\n          payload: message,\r\n        });\r\n  \r\n        return Promise.reject();\r\n      }\r\n    );\r\n  };\r\n\r\n  export const login = (email, password) => (dispatch) => {\r\n    return AuthService.login(email, password).then(\r\n      (data) => {\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: { user: data },\r\n        });\r\n  \r\n        return Promise.resolve();\r\n      },\r\n      (error) => {\r\n        const message =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n  \r\n        dispatch({\r\n          type: LOGIN_FAIL,\r\n        });\r\n  \r\n        dispatch({\r\n          type: SET_MESSAGE,\r\n          payload: message,\r\n        });\r\n  \r\n        return Promise.reject();\r\n      }\r\n    );\r\n  };\r\n  \r\n  export const logout = () => (dispatch) => {\r\n    AuthService.logout();\r\n  \r\n    dispatch({\r\n      type: LOGOUT,\r\n    });\r\n  };","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n","import React, { useState }  from 'react';\r\n\r\n\r\nfunction GreetDev(props) { \r\n    const [likes, setlikes] = useState(0);\r\n    const [reportmsg, setReportmsg] = useState('');\r\n    return (\r\n        <div>\r\n            <p>I'm introducing you to <strong>{props.name}</strong> <i> {reportmsg} </i></p>\r\n            <p>Likes :  {likes} </p>\r\n            <button onClick={() => setlikes(likes+1)}>\r\n                Like\r\n            </button>\r\n            <button onClick={() => setReportmsg('Reported. Thank you chief')}>\r\n                Report    \r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GreetDev;","import React from 'react';\r\nimport GreetDev from '../../commons/components/GreetDev';\r\n\r\n\r\n\r\nfunction Helloworld() {\r\n  var devs = ['Albert C.', 'Hector A.', 'Oriol A.', 'Ruben B.', 'Samu R.', 'Daniel R.'];\r\n  return (\r\n    <div>\r\n      <strong>This is our Dev Team.</strong>\r\n      { devs.map(dev => <GreetDev name={dev} key={dev}/>) }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Helloworld;","import React,  { useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { login } from \"../../actions/auth\";\r\n\r\nimport '../../commons/components/App.css';\r\n\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login = (props) => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { isLoggedIn } = useSelector(state => state.auth);\r\n  const { message } = useSelector(state => state.message);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      dispatch(login(email, password))\r\n        .then(() => {\r\n          props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/profile\" />;\r\n  }\r\n  \r\nreturn (\r\n    <section className=\"login\">\r\n      <div className=\"loginContainer\">\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <label>E-mail</label>\r\n          <Input\r\n            type=\"text\"\r\n            autoFocus\r\n            required\r\n            name='email'\r\n            value={email}\r\n            onChange={onChangeEmail}\r\n            validations={[required,validEmail]}\r\n          />\r\n          <p className=\"errorMsg\"></p>\r\n\r\n          <label>Password</label>\r\n          <Input\r\n            type=\"text\"\r\n            autoFocus\r\n            required\r\n            name='password'\r\n            value={password}\r\n            onChange={onChangePassword}\r\n            validations={[required]}\r\n          />\r\n          <p className=\"errorMsg\"></p>\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"btnContainer\">\r\n            <button className=\"btn btn-primary btn-block\" disabled={loading}> \r\n              {loading ? (\r\n                <span> Loading...</span>\r\n                \r\n              ) : (<span>Sign up</span>)\r\n            }\r\n            </button>\r\n            <p>Do you have an account ?   \r\n            <Link to=\"/registerclient\"> Sign in</Link></p>\r\n          </div>       \r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;","import React,  { useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { register } from \"../../actions/auth\";\r\nimport '../../commons/components/App.css';\r\n\r\n\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Register = () => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [name, setname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n  const user_type = 'customer' // customer, restaurant, deliveryman\r\n  const { message } = useSelector(state => state.message);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeName = (e) => {\r\n    const name = e.target.value;\r\n    setname(name);\r\n  };\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    setSuccessful(false);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      dispatch(register(name, email, password, user_type))\r\n        .then(() => {\r\n          setSuccessful(true);\r\n        })\r\n        .catch(() => {\r\n          setSuccessful(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"login\">\r\n      <div className=\"loginContainer\">\r\n        <Form onSubmit={handleRegister} ref={form}>\r\n          <label>Name</label>\r\n          <Input\r\n          type=\"text\"\r\n          autoFocus\r\n          required\r\n          name='name'\r\n          value={name}\r\n          onChange={onChangeName}\r\n          validations={[required]}\r\n          />\r\n          <p className=\"errorMsg\"></p>\r\n\r\n          <label>E-mail</label>\r\n          <Input\r\n          type=\"text\"\r\n          autoFocus\r\n          required\r\n          name='email'\r\n          value={email}\r\n          onChange={onChangeEmail}\r\n          validations={[required, validEmail]}\r\n          />\r\n          <p className=\"errorMsg\"></p>\r\n\r\n          <label>Password</label>\r\n          <Input\r\n          type=\"text\"\r\n          autoFocus\r\n          required\r\n          name='password'\r\n          value={password}\r\n          onChange={onChangePassword}\r\n          validations={[required, vpassword]}\r\n          />\r\n          <p className=\"errorMsg\"></p>\r\n\r\n          <div className=\"btnContainer\">\r\n            <button className=\"btn btn-primary btn-block\"> Sign up </button>\r\n            <p>Do you have an account?\r\n              <Link to=\"./login\"> Sign in</Link>\r\n            </p>\r\n            <p>Do you want to register as a restaurant?\r\n              <Link to=\"/registerrestaurant\"> Sign up</Link>\r\n            </p>\r\n            <p>Do you want to register as a deliveryman?\r\n              <Link to=\"/registerdeliveryman\"> Sign up</Link>\r\n            </p>\r\n          </div>   \r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>    \r\n      </div>\r\n    </section>\r\n\r\n    \r\n\r\n  );\r\n}\r\n\r\nexport default Register;","import React,  { useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { register } from \"../../actions/auth\";\r\nimport '../../commons/components/App.css';\r\n\r\n\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Register = () => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [name, setname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n  const user_type = 'restaurant' // customer, restaurant, deliveryman\r\n  const { message } = useSelector(state => state.message);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeName = (e) => {\r\n    const name = e.target.value;\r\n    setname(name);\r\n  };\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    setSuccessful(false);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      dispatch(register(name, email, password, user_type))\r\n        .then(() => {\r\n          setSuccessful(true);\r\n        })\r\n        .catch(() => {\r\n          setSuccessful(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"login\">\r\n      <div className=\"loginContainer\">\r\n        <Form onSubmit={handleRegister} ref={form}>\r\n          <label>Name</label>\r\n          <Input\r\n          type=\"text\"\r\n          autoFocus\r\n          required\r\n          name='name'\r\n          value={name}\r\n          onChange={onChangeName}\r\n          validations={[required]}\r\n          />\r\n          <p className=\"errorMsg\"></p>\r\n\r\n          <label>E-mail</label>\r\n          <Input\r\n          type=\"text\"\r\n          autoFocus\r\n          required\r\n          name='email'\r\n          value={email}\r\n          onChange={onChangeEmail}\r\n          validations={[required, validEmail]}\r\n          />\r\n          <p className=\"errorMsg\"></p>\r\n\r\n          <label>Password</label>\r\n          <Input\r\n          type=\"text\"\r\n          autoFocus\r\n          required\r\n          name='password'\r\n          value={password}\r\n          onChange={onChangePassword}\r\n          validations={[required, vpassword]}\r\n          />\r\n          <p className=\"errorMsg\"></p>\r\n\r\n          <div className=\"btnContainer\">\r\n            <button className=\"btn btn-primary btn-block\"> Sign up </button>\r\n            <p>Do you have an account?\r\n              <Link to=\"./login\"> Sign in</Link>\r\n            </p>\r\n            <p>Do you want to register as a restaurant?\r\n              <Link to=\"/registerrestaurant\"> Sign up</Link>\r\n            </p>\r\n            <p>Do you want to register as a deliveryman?\r\n              <Link to=\"/registerdeliveryman\"> Sign up</Link>\r\n            </p>\r\n          </div>   \r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>    \r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Register;","import React,  { useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { register } from \"../../actions/auth\";\r\nimport '../../commons/components/App.css';\r\n\r\n\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Register = () => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [name, setname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n  const user_type = 'deliveryman' // customer, restaurant, deliveryman\r\n  const { message } = useSelector(state => state.message);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeName = (e) => {\r\n    const name = e.target.value;\r\n    setname(name);\r\n  };\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    setSuccessful(false);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      dispatch(register(name, email, password, user_type))\r\n        .then(() => {\r\n          setSuccessful(true);\r\n        })\r\n        .catch(() => {\r\n          setSuccessful(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"login\">\r\n      <div className=\"loginContainer\">\r\n        <Form onSubmit={handleRegister} ref={form}>\r\n          <label>Name</label>\r\n          <Input\r\n          type=\"text\"\r\n          autoFocus\r\n          required\r\n          name='name'\r\n          value={name}\r\n          onChange={onChangeName}\r\n          validations={[required]}\r\n          />\r\n          <p className=\"errorMsg\"></p>\r\n\r\n          <label>E-mail</label>\r\n          <Input\r\n          type=\"text\"\r\n          autoFocus\r\n          required\r\n          name='email'\r\n          value={email}\r\n          onChange={onChangeEmail}\r\n          validations={[required, validEmail]}\r\n          />\r\n          <p className=\"errorMsg\"></p>\r\n\r\n          <label>Password</label>\r\n          <Input\r\n          type=\"text\"\r\n          autoFocus\r\n          required\r\n          name='password'\r\n          value={password}\r\n          onChange={onChangePassword}\r\n          validations={[required, vpassword]}\r\n          />\r\n          <p className=\"errorMsg\"></p>\r\n\r\n          <div className=\"btnContainer\">\r\n            <button className=\"btn btn-primary btn-block\"> Sign up </button>\r\n            <p>Do you have an account?\r\n              <Link to=\"./login\"> Sign in</Link>\r\n            </p>\r\n            <p>Do you want to register as a client?\r\n              <Link to=\"/registerclient\"> Sign up</Link>\r\n            </p>\r\n            <p>Do you want to register as a restaurant?\r\n              <Link to=\"/registerrestaurant\"> Sign up</Link>\r\n            </p>\r\n          </div>   \r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>    \r\n      </div>\r\n    </section>\r\n\r\n    \r\n\r\n  );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './Nav.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Nav() { \r\n    const navStyle = {\r\n        color: 'black'\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <li className=\"nav-links\">\r\n                <Link style = {navStyle} to='/'>\r\n                    <h3>Logo</h3>\r\n                </Link>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Control id=\"formLocationNavBar\" placeholder=\"Enter delivery adress\" />\r\n                    </Form.Group>\r\n                </Form>\r\n                <Link stryle={navStyle} to='/login'>\r\n                    <h5>Log in</h5>\r\n                </Link>\r\n            </li>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { logout } from \"./actions/auth\";\r\nimport { clearMessage } from \"./actions/message\";\r\n\r\nimport { history } from './utils/history';\r\n\r\nimport Helloworld from './pages/Helloworld/Helloworld';\r\nimport Login from './pages/Login/Login.js';\r\nimport RegisterClient from './pages/RegisterClient/RegisterClient.js';\r\nimport RegisterRestaurant from './pages/RegisterRestaurant/RegisterRestaurant.js';\r\nimport RegisterDeliveryman from './pages/RegisterDeliveryman/RegisterDeliveryman.js';\r\n\r\n\r\nimport Nav from './commons/components/Nav.js';\r\n\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\n\r\nconst App = () => {\r\n\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  console.log({user: currentUser})\r\n\r\n  useEffect(() => {\r\n    history.listen((location) => {\r\n      dispatch(clearMessage()); // clear message when changing location\r\n    });\r\n  }, [dispatch]);\r\n\r\n// eslint-disable-next-line\r\n  const logOut = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <div>\r\n        <Nav />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Helloworld}/>\r\n          <Route path='/login' component={Login}/>\r\n          <Route path='/registerclient' component={RegisterClient}/>\r\n          <Route path='/registerrestaurant' component={RegisterRestaurant}/>\r\n          <Route path='/registerdeliveryman' component={RegisterDeliveryman}/>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\r\n\r\nexport const setMessage = (message) => ({\r\n  type: SET_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const clearMessage = () => ({\r\n  type: CLEAR_MESSAGE,\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n  } from \"../actions/types\";\r\n  \r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n  const initialState = user\r\n    ? { isLoggedIn: true, user }\r\n    : { isLoggedIn: false, user: null };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case REGISTER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case REGISTER_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          user: payload.user,\r\n        };\r\n      case LOGIN_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      case LOGOUT:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider} from 'react-redux';\r\nimport App from './App';\r\nimport * as serviceWorker from './utils/serviceWorker';\r\nimport Store from './store'\r\n\r\nrequire('dotenv').config()\r\n\r\nconst store = Store;\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}